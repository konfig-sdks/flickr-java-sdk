/*
 * Flickr API Schema
 * A subset of Flickr's API defined in Swagger format.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * GroupRestrictions
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class GroupRestrictions {
  public static final String SERIALIZED_NAME_ART_OK = "art_ok";
  @SerializedName(SERIALIZED_NAME_ART_OK)
  private Boolean artOk;

  public static final String SERIALIZED_NAME_HAS_GEO = "has_geo";
  @SerializedName(SERIALIZED_NAME_HAS_GEO)
  private Boolean hasGeo;

  public static final String SERIALIZED_NAME_IMAGES_OK = "images_ok";
  @SerializedName(SERIALIZED_NAME_IMAGES_OK)
  private Boolean imagesOk;

  public static final String SERIALIZED_NAME_MODERATE_OK = "moderate_ok";
  @SerializedName(SERIALIZED_NAME_MODERATE_OK)
  private Boolean moderateOk;

  public static final String SERIALIZED_NAME_PHOTOS_OK = "photos_ok";
  @SerializedName(SERIALIZED_NAME_PHOTOS_OK)
  private Boolean photosOk;

  public static final String SERIALIZED_NAME_RESTRICTED_OK = "restricted_ok";
  @SerializedName(SERIALIZED_NAME_RESTRICTED_OK)
  private Boolean restrictedOk;

  public static final String SERIALIZED_NAME_SAFE_OK = "safe_ok";
  @SerializedName(SERIALIZED_NAME_SAFE_OK)
  private Boolean safeOk;

  public static final String SERIALIZED_NAME_SCREENS_OK = "screens_ok";
  @SerializedName(SERIALIZED_NAME_SCREENS_OK)
  private Boolean screensOk;

  public static final String SERIALIZED_NAME_VIDEOS_OK = "videos_ok";
  @SerializedName(SERIALIZED_NAME_VIDEOS_OK)
  private Boolean videosOk;

  public GroupRestrictions() {
  }

  public GroupRestrictions artOk(Boolean artOk) {
    
    
    
    
    this.artOk = artOk;
    return this;
  }

   /**
   * Get artOk
   * @return artOk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getArtOk() {
    return artOk;
  }


  public void setArtOk(Boolean artOk) {
    
    
    
    this.artOk = artOk;
  }


  public GroupRestrictions hasGeo(Boolean hasGeo) {
    
    
    
    
    this.hasGeo = hasGeo;
    return this;
  }

   /**
   * Get hasGeo
   * @return hasGeo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getHasGeo() {
    return hasGeo;
  }


  public void setHasGeo(Boolean hasGeo) {
    
    
    
    this.hasGeo = hasGeo;
  }


  public GroupRestrictions imagesOk(Boolean imagesOk) {
    
    
    
    
    this.imagesOk = imagesOk;
    return this;
  }

   /**
   * Get imagesOk
   * @return imagesOk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getImagesOk() {
    return imagesOk;
  }


  public void setImagesOk(Boolean imagesOk) {
    
    
    
    this.imagesOk = imagesOk;
  }


  public GroupRestrictions moderateOk(Boolean moderateOk) {
    
    
    
    
    this.moderateOk = moderateOk;
    return this;
  }

   /**
   * Get moderateOk
   * @return moderateOk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getModerateOk() {
    return moderateOk;
  }


  public void setModerateOk(Boolean moderateOk) {
    
    
    
    this.moderateOk = moderateOk;
  }


  public GroupRestrictions photosOk(Boolean photosOk) {
    
    
    
    
    this.photosOk = photosOk;
    return this;
  }

   /**
   * Get photosOk
   * @return photosOk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getPhotosOk() {
    return photosOk;
  }


  public void setPhotosOk(Boolean photosOk) {
    
    
    
    this.photosOk = photosOk;
  }


  public GroupRestrictions restrictedOk(Boolean restrictedOk) {
    
    
    
    
    this.restrictedOk = restrictedOk;
    return this;
  }

   /**
   * Get restrictedOk
   * @return restrictedOk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getRestrictedOk() {
    return restrictedOk;
  }


  public void setRestrictedOk(Boolean restrictedOk) {
    
    
    
    this.restrictedOk = restrictedOk;
  }


  public GroupRestrictions safeOk(Boolean safeOk) {
    
    
    
    
    this.safeOk = safeOk;
    return this;
  }

   /**
   * Get safeOk
   * @return safeOk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSafeOk() {
    return safeOk;
  }


  public void setSafeOk(Boolean safeOk) {
    
    
    
    this.safeOk = safeOk;
  }


  public GroupRestrictions screensOk(Boolean screensOk) {
    
    
    
    
    this.screensOk = screensOk;
    return this;
  }

   /**
   * Get screensOk
   * @return screensOk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getScreensOk() {
    return screensOk;
  }


  public void setScreensOk(Boolean screensOk) {
    
    
    
    this.screensOk = screensOk;
  }


  public GroupRestrictions videosOk(Boolean videosOk) {
    
    
    
    
    this.videosOk = videosOk;
    return this;
  }

   /**
   * Get videosOk
   * @return videosOk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getVideosOk() {
    return videosOk;
  }


  public void setVideosOk(Boolean videosOk) {
    
    
    
    this.videosOk = videosOk;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the GroupRestrictions instance itself
   */
  public GroupRestrictions putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GroupRestrictions groupRestrictions = (GroupRestrictions) o;
    return Objects.equals(this.artOk, groupRestrictions.artOk) &&
        Objects.equals(this.hasGeo, groupRestrictions.hasGeo) &&
        Objects.equals(this.imagesOk, groupRestrictions.imagesOk) &&
        Objects.equals(this.moderateOk, groupRestrictions.moderateOk) &&
        Objects.equals(this.photosOk, groupRestrictions.photosOk) &&
        Objects.equals(this.restrictedOk, groupRestrictions.restrictedOk) &&
        Objects.equals(this.safeOk, groupRestrictions.safeOk) &&
        Objects.equals(this.screensOk, groupRestrictions.screensOk) &&
        Objects.equals(this.videosOk, groupRestrictions.videosOk)&&
        Objects.equals(this.additionalProperties, groupRestrictions.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(artOk, hasGeo, imagesOk, moderateOk, photosOk, restrictedOk, safeOk, screensOk, videosOk, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GroupRestrictions {\n");
    sb.append("    artOk: ").append(toIndentedString(artOk)).append("\n");
    sb.append("    hasGeo: ").append(toIndentedString(hasGeo)).append("\n");
    sb.append("    imagesOk: ").append(toIndentedString(imagesOk)).append("\n");
    sb.append("    moderateOk: ").append(toIndentedString(moderateOk)).append("\n");
    sb.append("    photosOk: ").append(toIndentedString(photosOk)).append("\n");
    sb.append("    restrictedOk: ").append(toIndentedString(restrictedOk)).append("\n");
    sb.append("    safeOk: ").append(toIndentedString(safeOk)).append("\n");
    sb.append("    screensOk: ").append(toIndentedString(screensOk)).append("\n");
    sb.append("    videosOk: ").append(toIndentedString(videosOk)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("art_ok");
    openapiFields.add("has_geo");
    openapiFields.add("images_ok");
    openapiFields.add("moderate_ok");
    openapiFields.add("photos_ok");
    openapiFields.add("restricted_ok");
    openapiFields.add("safe_ok");
    openapiFields.add("screens_ok");
    openapiFields.add("videos_ok");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to GroupRestrictions
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!GroupRestrictions.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GroupRestrictions is not found in the empty JSON string", GroupRestrictions.openapiRequiredFields.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GroupRestrictions.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GroupRestrictions' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GroupRestrictions> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GroupRestrictions.class));

       return (TypeAdapter<T>) new TypeAdapter<GroupRestrictions>() {
           @Override
           public void write(JsonWriter out, GroupRestrictions value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public GroupRestrictions read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             GroupRestrictions instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of GroupRestrictions given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of GroupRestrictions
  * @throws IOException if the JSON string is invalid with respect to GroupRestrictions
  */
  public static GroupRestrictions fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GroupRestrictions.class);
  }

 /**
  * Convert an instance of GroupRestrictions to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

